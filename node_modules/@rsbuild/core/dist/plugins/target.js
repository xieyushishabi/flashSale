"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var target_exports = {};
__export(target_exports, {
  pluginTarget: () => pluginTarget
});
module.exports = __toCommonJS(target_exports);
var import_shared = require("@rsbuild/shared");
const pluginTarget = () => ({
  name: "rsbuild:target",
  setup(api) {
    api.modifyBundlerChain({
      order: "pre",
      handler: async (chain, { target }) => {
        if (target === "node") {
          chain.target("node");
          return;
        }
        const config = api.getNormalizedConfig();
        const browserslist = await (0, import_shared.getBrowserslistWithDefault)(
          api.context.rootPath,
          config,
          target
        );
        const esVersion = (0, import_shared.browserslistToESVersion)(browserslist);
        if (target === "web-worker" || target === "service-worker") {
          chain.target(["webworker", `es${esVersion}`]);
          return;
        }
        chain.target(["web", `es${esVersion}`]);
      }
    });
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  pluginTarget
});
