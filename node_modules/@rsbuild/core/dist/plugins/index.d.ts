import type { ModifyHTMLTagsFn } from '@rsbuild/shared';
export declare const plugins: {
    basic: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    html: (modifyTagsFn: ModifyHTMLTagsFn) => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    cleanOutput: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    startUrl: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    fileSize: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    target: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    entry: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    cache: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    splitChunks: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    inlineChunk: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    bundleAnalyzer: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    rsdoctor: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    asset: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    wasm: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    moment: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    nodeAddons: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    externals: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    resourceHints: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    performance: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    define: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    server: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    moduleFederation: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
    manifest: () => Promise<import("@rsbuild/shared").RsbuildPlugin>;
};
